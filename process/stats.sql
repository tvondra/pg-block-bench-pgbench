create table results (
  id          serial primary key,
  run         text,   -- identifies the run (date)
  machine     text,   -- identifies the system (i5/xeon)
  start_time  int,    -- unix timestamp of run start
  end_time    int,    -- unix timestamp of run end
  data_block  int,    -- data block size in KB
  wal_block   int,    -- WAL block size in KB
  wal_segment int,    -- WAL segment size in MB
  scale       int,    -- pgbench scale
  mode        text,   -- read-only or read-write
  tps         float4, -- throughput as measured by pgbench
  time        float4, -- duration as measured by pgbench
  wal_bytes   bigint  -- amount of WAL generated by the run
);

create index on results (start_time, end_time, machine, id);

-- lookup run ID in the results table, using machine name and timestamp
create or replace function lookup_run_id(p_machine text, p_ts timestamptz) returns int as $$
  select id from results
   where machine = p_machine and
         extract(epoch from p_ts)::int between start_time and end_time
   order by start_time
   limit 1;
$$ language sql;

-- statistics about CPU utilization
create table stats_cpu (
    run_id      int not null references results (id),
    ts          timestamptz,
    cpu_number  text,
    user_time   double precision,
    nice_time   double precision,
    system_time double precision,
    iowait_time double precision,
    steal_time  double precision,
    idle_time   double precision
);

create index on stats_cpu(run_id);

-- statistics about disk device utilization
create table stats_disk (
    run_id      int not null references results (id),
    ts          timestamptz,
    device      text,
    tps         double precision,
    rkbps       double precision,
    wkbps       double precision,
    dkbps       double precision,
    areqsz      double precision,
    aqusz       double precision,
    await       double precision,
    util        double precision
);

create index on stats_disk(run_id);

-- statistics about total block I/O
create table stats_io (
    run_id      int not null references results (id),
    ts          timestamptz,
    tps         double precision,
    rtps        double precision,
    wtps        double precision,
    dtps        double precision,
    breadps     double precision,
    bwrtnps     double precision,
    bdscdps     double precision
);

create index on stats_io(run_id);

-- statistics about memory
create table stats_mem (
    run_id      int not null references results (id),
    ts          timestamptz,
    kbmemfree   double precision,
    kbavail     double precision,
    kbmemused   double precision,
    memused_pct double precision,
    kbbuffers   double precision,
    kbcached    double precision,
    kbcommit    double precision,
    commit_pct  double precision,
    kbactive    double precision,
    kbinact     double precision,
    kbdirty     double precision
);

create index on stats_mem(run_id);

-- statistics about bgwriter (checkpoints, ...)
create table stats_bgwriter (
    run_id                int not null references results (id),
    epoch                 double precision,
    ts                    timestamptz,
    lsn                   pg_lsn,
    checkpoints_timed     int,
    checkpoints_req       int,
    checkpoint_write_time bigint,
    checkpoint_sync_time  bigint,
    buffers_checkpoint    bigint,
    buffers_clean         bigint,
    maxwritten_clean      bigint,
    buffers_backend       bigint,
    buffers_backend_fsync bigint,
    buffers_alloc         bigint,
    stats_reset           timestamptz
);

create index on stats_bgwriter(run_id);

-- statistics about database
create table stats_database (
    run_id                   int not null references results (id),
    epoch                    double precision,
    ts                       timestamptz,
    datid                    oid,
    datname                  text,
    numbackends              int,
    xact_commit              bigint,
    xact_rollback            bigint,
    blks_read                bigint,
    blks_hit                 bigint,
    tup_returned             bigint,
    tup_fetched              bigint,
    tup_inserted             bigint,
    tup_updated              bigint,
    tup_deleted              bigint,
    conflicts                bigint,
    temp_files               bigint,
    temp_bytes               bigint,
    deadlocks                bigint,
    checksum_failures        bigint,
    checksum_last_failure    bigint,
    blk_read_time            double precision,
    blk_write_time           double precision,
    session_time             double precision,
    active_time              double precision,
    idle_in_transaction_time double precision,
    sessions                 bigint,
    sessions_abandoned       bigint,
    sessions_fatal           bigint,
    sessions_killed          bigint,
    stats_reset              timestamptz
);

create index on stats_database(run_id);

-- view integrating run results, system and database stats
create view results_with_stats as
with cpu_stats as (
    select
        run_id,
        count(*)              as cpu_count,
        avg(user_time)::int   as cpu_user_time,
        avg(nice_time)::int   as cpu_nice_time,
        avg(system_time)::int as cpu_system_time,
        avg(iowait_time)::int as cpu_iowait_time,
        avg(steal_time)::int  as cpu_steal_time,
        avg(idle_time)::int   as cpu_idle_time
    from stats_cpu
    group by run_id
),
dev_stats as (
    select
        run_id,
        count(*)         as dev_count,
        avg(tps)::int    as dev_tps,
        avg(rkbps)::int  as dev_rkbps,
        avg(wkbps)::int  as dev_wkbps,
        avg(dkbps)::int  as dev_dkbps,
        avg(areqsz)::int as dev_areqsz,
        avg(aqusz)::int  as dev_aqusz,
        avg(await)::int  as dev_await,
        avg(util)::int   as dev_util
    from stats_disk
    group by run_id
),
io_stats as (
    select
        run_id,
        count(*)          as io_count,
        avg(tps)::int     as io_tps,
        avg(rtps)::int    as io_rtps,
        avg(wtps)::int    as io_wtps,
        avg(dtps)::int    as io_dtps,
        avg(breadps)::int as io_breadps,
        avg(bwrtnps)::int as io_bwrtpns,
        avg(bdscdps)::int as io_bdscdps
    from stats_io
    group by run_id
),
mem_stats as (
    select
        run_id,
        count(*)              as mem_count,
        avg(kbmemfree)::int   as mem_kbmemfree,
        avg(kbavail)::int     as mem_kbavail,
        avg(kbmemused)::int   as mem_kbmemused,
        avg(memused_pct)::int as mem_memused_pct,
        avg(kbbuffers)::int   as mem_kbbuffers,
        avg(kbcached)::int    as mem_kbcached,
        avg(kbcommit)::int    as mem_kbcommit,
        avg(commit_pct)::int  as mem_commit_pct,
        avg(kbactive)::int    as mem_kbactive,
        avg(kbinact)::int     as mem_kbinact,
        avg(kbdirty)::int     as mem_kbdirty
    from stats_mem
    group by run_id
),
bgwriter_stat as (
    select
        run_id,
        count(*)         as bgw_count,
        (max(lsn) - min(lsn)) as wal_diff,
        (max(epoch) - min(epoch)) as seconds,
        (max(checkpoints_timed) - min(checkpoints_timed)) as checkpoints_timed,
        (max(checkpoints_req) - min(checkpoints_req)) as checkpoints_req,
        (max(checkpoint_write_time) - min(checkpoint_write_time)) as checkpoint_write_time,
        (max(checkpoint_sync_time) - min(checkpoint_sync_time)) as checkpoint_sync_time,
        (max(buffers_checkpoint) - min(buffers_checkpoint)) as buffers_checkpoint,
        (max(buffers_clean) - min(buffers_clean)) as buffers_clean,
        (max(maxwritten_clean) - min(maxwritten_clean)) as maxwritten_clean,
        (max(buffers_backend) - min(buffers_backend)) as buffers_backend,
        (max(buffers_backend_fsync) - min(buffers_backend_fsync)) as buffers_backend_fsync,
        (max(buffers_alloc) - min(buffers_alloc)) as buffers_alloc
    from stats_bgwriter group by run_id
),
database_stat as (
    select
        run_id,
        count(*)         as db_count,
        (max(xact_commit) - min(xact_commit)) as xact_commit,
        (max(xact_rollback) - min(xact_rollback)) as xact_rollback,
        (max(blks_read) - min(blks_read)) as blks_read,
        (max(blks_hit) - min(blks_hit)) as blks_hit,
        (max(tup_returned) - min(tup_returned)) as tup_returned,
        (max(tup_fetched) - min(tup_fetched)) as tup_fetched,
        (max(tup_inserted) - min(tup_inserted)) as tup_inserted,
        (max(tup_updated) - min(tup_updated)) as tup_updated,
        (max(tup_deleted) - min(tup_deleted)) as tup_deleted,
        (max(conflicts) - min(conflicts)) as conflicts,
        (max(temp_files) - min(temp_files)) as temp_files,
        (max(temp_bytes) - min(temp_bytes)) as temp_bytes,
        (max(deadlocks) - min(deadlocks)) as deadlocks,
        (max(checksum_failures) - min(checksum_failures)) as checksum_failures,
        (max(checksum_last_failure) - min(checksum_last_failure)) as checksum_last_failure,
        (max(blk_read_time) - min(blk_read_time)) as blk_read_time,
        (max(blk_write_time) - min(blk_write_time)) as blk_write_time,
        (max(session_time) - min(session_time)) as session_time,
        (max(active_time) - min(active_time)) as active_time,
        (max(idle_in_transaction_time) - min(idle_in_transaction_time)) as idle_in_transaction_time,
        (max(sessions) - min(sessions)) as sessions,
        (max(sessions_abandoned) - min(sessions_abandoned)) as sessions_abandoned,
        (max(sessions_fatal) - min(sessions_fatal)) as sessions_fatal,
        (max(sessions_killed) - min(sessions_killed)) as sessions_killed
    from stats_database group by run_id
)
select
    -- info about runs
    results.*,

    -- system stats
    (cpu_user_time + cpu_system_time) as cpu_total_time,
    cpu_user_time,
    cpu_nice_time,
    cpu_system_time,
    cpu_iowait_time,
    cpu_steal_time,
    cpu_idle_time,
    dev_tps,
    (dev_rkbps + dev_wkbps) as dev_kbps,
    dev_rkbps,
    dev_wkbps,
    dev_dkbps,
    dev_areqsz,
    dev_aqusz,
    dev_await,
    dev_util,
    io_tps,
    io_rtps,
    io_wtps,
    io_dtps,
    (io_breadps + io_bwrtpns) as io_bps,
    io_breadps,
    io_bwrtpns,
    io_bdscdps,
    mem_kbmemfree,
    mem_kbavail,
    mem_kbmemused,
    mem_memused_pct,
    mem_kbbuffers,
    mem_kbcached,
    mem_kbcommit,
    mem_commit_pct,
    mem_kbactive,
    mem_kbinact,
    mem_kbdirty,

    -- database stats
    wal_diff,
    seconds,
    (checkpoints_timed + checkpoints_req) as checkpoints_all,
    checkpoints_timed,
    checkpoints_req,
    checkpoint_write_time,
    checkpoint_sync_time,
    (buffers_checkpoint + buffers_clean + buffers_backend) as buffers_all,
    buffers_checkpoint,
    buffers_clean,
    maxwritten_clean,
    buffers_backend,
    buffers_backend_fsync,
    buffers_alloc,
    xact_commit,
    xact_rollback,
    blks_read,
    blks_hit,
    (blks_hit * 100.0 / greatest(1,blks_read + blks_hit)) as blks_hit_ratio,
    tup_returned,
    tup_fetched,
    tup_inserted,
    tup_updated,
    tup_deleted,
    conflicts,
    temp_files,
    temp_bytes,
    deadlocks,
    checksum_failures,
    checksum_last_failure,
    blk_read_time,
    blk_write_time,
    session_time,
    active_time,
    idle_in_transaction_time,
    sessions,
    sessions_abandoned,
    sessions_fatal,
    sessions_killed,
    cpu_count,
    dev_count,
    io_count,
    mem_count,
    bgw_count,
    db_count

from results left join cpu_stats on (id = cpu_stats.run_id)
             left join dev_stats on (id = dev_stats.run_id)
             left join io_stats on (id = io_stats.run_id)
             left join mem_stats on (id = mem_stats.run_id)
             left join bgwriter_stat on (results.id = bgwriter_stat.run_id)
             left join database_stat on (results.id = database_stat.run_id);

-- view with results and stats aggregated per combination (so averaging data
-- from multiple runs for the same combination of block sizes, etc.)
create view results_with_stats_agg as
with base_tps as (
  select run, machine, wal_segment, scale, mode, max(tps)::bigint as tps
    from results
    where data_block = 8 and wal_block = 8
    group by run, machine, wal_segment, scale, mode
)
select
    -- parameters
    run,
    machine,
    data_block,
    wal_block,
    wal_segment,
    scale,
    mode,
    count(*) as runs, -- number of runs for this combination

    -- pgbench results
    max(tps)::bigint as tps,
    (select tps from base_tps b where (b.run, b.machine, b.wal_segment, b.scale, b.mode) = (r.run, r.machine, r.wal_segment, r.scale, r.mode)) AS base_tps,

    -- system stats
    avg(wal_bytes)::bigint as wal_bytes,
    avg(cpu_total_time)::bigint as cpu_total_time,
    avg(cpu_user_time)::bigint as cpu_user_time,
    avg(cpu_nice_time)::bigint as cpu_nice_time,
    avg(cpu_system_time)::bigint as cpu_system_time,
    avg(cpu_iowait_time)::bigint as cpu_iowait_time,
    avg(cpu_steal_time)::bigint as cpu_steal_time,
    avg(cpu_idle_time)::bigint as cpu_idle_time,
    avg(dev_tps)::bigint as dev_tps,
    avg(dev_kbps)::bigint as dev_kbps,
    avg(dev_rkbps)::bigint as dev_rkbps,
    avg(dev_wkbps)::bigint as dev_wkbps,
    avg(dev_dkbps)::bigint as dev_dkbps,
    avg(dev_areqsz)::bigint as dev_areqsz,
    avg(dev_aqusz)::bigint as dev_aqusz,
    avg(dev_await)::bigint as dev_await,
    avg(dev_util)::bigint as dev_util,
    avg(io_tps)::bigint as io_tps,
    avg(io_bps)::bigint as io_bps,
    avg(io_rtps)::bigint as io_rtps,
    avg(io_wtps)::bigint as io_wtps,
    avg(io_dtps)::bigint as io_dtps,
    avg(io_breadps)::bigint as io_breadps,
    avg(io_bwrtpns)::bigint as io_bwrtpns,
    avg(io_bdscdps)::bigint as io_bdscdps,
    avg(mem_kbmemfree)::bigint as mem_kbmemfree,
    avg(mem_kbavail)::bigint as mem_kbavail,
    avg(mem_kbmemused)::bigint as mem_kbmemused,
    avg(mem_memused_pct)::bigint as mem_memused_pct,
    avg(mem_kbbuffers)::bigint as mem_kbbuffers,
    avg(mem_kbcached)::bigint as mem_kbcached,
    avg(mem_kbcommit)::bigint as mem_kbcommit,
    avg(mem_commit_pct)::bigint as mem_commit_pct,
    avg(mem_kbactive)::bigint as mem_kbactive,
    avg(mem_kbinact)::bigint as mem_kbinact,
    avg(mem_kbdirty)::bigint as mem_kbdirty,

    -- database stats
    avg(wal_diff)::bigint as wal_diff,
    avg(seconds)::bigint as seconds,
    avg(checkpoints_all)::bigint as checkpoints_all,
    avg(checkpoints_timed)::bigint as checkpoints_timed,
    avg(checkpoints_req)::bigint as checkpoints_req,
    avg(checkpoint_write_time)::bigint as checkpoint_write_time,
    avg(checkpoint_sync_time)::bigint as checkpoint_sync_time,
    avg(buffers_all)::bigint as buffers_all,
    avg(buffers_checkpoint)::bigint as buffers_checkpoint,
    avg(buffers_clean)::bigint as buffers_clean,
    avg(maxwritten_clean)::bigint as maxwritten_clean,
    avg(buffers_backend)::bigint as buffers_backend,
    avg(buffers_backend_fsync)::bigint as buffers_backend_fsync,
    avg(buffers_alloc)::bigint as buffers_alloc,
    avg(xact_commit)::bigint as xact_commit,
    avg(xact_rollback)::bigint as xact_rollback,
    avg(blks_read)::bigint as blks_read,
    avg(blks_hit)::bigint as blks_hit,
    avg(blks_hit_ratio) as blks_hit_ratio,
    avg(tup_returned)::bigint as tup_returned,
    avg(tup_fetched)::bigint as tup_fetched,
    avg(tup_inserted)::bigint as tup_inserted,
    avg(tup_updated)::bigint as tup_updated,
    avg(tup_deleted)::bigint as tup_deleted,
    avg(conflicts)::bigint as conflicts,
    avg(temp_files)::bigint as temp_files,
    avg(temp_bytes)::bigint as temp_bytes,
    avg(deadlocks)::bigint as deadlocks,
    avg(checksum_failures)::bigint as checksum_failures,
    avg(checksum_last_failure)::bigint as checksum_last_failure,
    avg(blk_read_time)::bigint as blk_read_time,
    avg(blk_write_time)::bigint as blk_write_time,
    avg(session_time)::bigint as session_time,
    avg(active_time)::bigint as active_time,
    avg(idle_in_transaction_time)::bigint as idle_in_transaction_time,
    avg(sessions)::bigint as sessions,
    avg(sessions_abandoned)::bigint as sessions_abandoned,
    avg(sessions_fatal)::bigint as sessions_fatal,
    avg(sessions_killed)::bigint as sessions_killed,
    avg(cpu_count)::bigint as cpu_count,
    avg(dev_count)::bigint as dev_count,
    avg(io_count)::bigint as io_count,
    avg(mem_count)::bigint as mem_count,
    avg(bgw_count)::bigint as bgw_count,
    avg(db_count)::bigint as db_count
from results_with_stats r
group by
    run,
    machine,
    scale,
    mode,
    data_block,
    wal_block,
    wal_segment
order by
    run,
    machine,
    scale,
    mode,
    data_block,
    wal_block,
    wal_segment;

-- results with correction to match tps of 8kB pages
create view results_with_stats_agg_corrected as
with stats as (
    select
        *,
        (base_tps::double precision / tps) as tps_coeff
    from results_with_stats_agg
)
select
    runs,
    run,
    machine,
    data_block,
    wal_block,
    wal_segment,
    scale,
    mode,
    tps,
    base_tps,
    tps_coeff,
    (wal_diff * tps_coeff)::bigint           as wal_diff,
    (checkpoints_all * tps_coeff)::bigint    as checkpoints_all,
    (checkpoints_timed * tps_coeff)::bigint  as checkpoints_timed,
    (checkpoints_req * tps_coeff)::bigint    as checkpoints_req,
    (buffers_all * tps_coeff)::bigint        as buffers_all,
    (buffers_checkpoint * tps_coeff)::bigint as buffers_checkpoint,
    (buffers_clean * tps_coeff)::bigint      as buffers_clean,
    (buffers_backend * tps_coeff)::bigint    as buffers_backend,
    (buffers_alloc * tps_coeff)::bigint      as buffers_alloc,
    (cpu_total_time * tps_coeff)::bigint     as cpu_total_time,
    (dev_tps * tps_coeff)::bigint            as dev_tps,
    (dev_kbps * tps_coeff)::bigint           as dev_kbps,
    (io_bps * tps_coeff)::bigint             as io_bps,
    (io_tps * tps_coeff)::bigint             as io_tps
from stats;

-- statistics about CPU utilization
create table load_stats_cpu (
    machine     text,
    ts          timestamptz,
    cpu_number  text,
    user_time   double precision,
    nice_time   double precision,
    system_time double precision,
    iowait_time double precision,
    steal_time  double precision,
    idle_time   double precision
);

-- statistics about disk device utilization
create table load_stats_disk (
    machine     text,
    ts          timestamptz,
    tps         double precision,
    rkbps       double precision,
    wkbps       double precision,
    dkbps       double precision,
    areqsz      double precision,
    aqusz       double precision,
    await       double precision,
    util        double precision,
    device      text
);

-- statistics about total block I/O
create table load_stats_io (
    machine     text,
    ts          timestamptz,
    tps         double precision,
    rtps        double precision,
    wtps        double precision,
    dtps        double precision,
    breadps     double precision,
    bwrtnps     double precision,
    bdscdps     double precision
);

-- statistics about memory
create table load_stats_mem (
    machine     text,
    ts          timestamptz,
    kbmemfree   double precision,
    kbavail     double precision,
    kbmemused   double precision,
    memused_pct double precision,
    kbbuffers   double precision,
    kbcached    double precision,
    kbcommit    double precision,
    commit_pct  double precision,
    kbactive    double precision,
    kbinact     double precision,
    kbdirty     double precision
);

-- statistics about bgwriter (checkpoints, ...)
create table load_stats_bgwriter (
    machine               text,
    data_block            int,    -- data block size in KB
    wal_block             int,    -- WAL block size in KB
    wal_segment           int,    -- WAL segment size in MB
    scale                 int,    -- pgbench scale
    mode                  text,   -- read-only or read-write
    run                   int,    -- run (1,2,3)
    seqno                 int, -- sample number for this run
    epoch                 double precision,
    ts                    timestamptz,
    lsn                   pg_lsn,
    checkpoints_timed     int,
    checkpoints_req       int,
    checkpoint_write_time bigint,
    checkpoint_sync_time  bigint,
    buffers_checkpoint    bigint,
    buffers_clean         bigint,
    maxwritten_clean      bigint,
    buffers_backend       bigint,
    buffers_backend_fsync bigint,
    buffers_alloc         bigint,
    stats_reset           timestamptz
);

-- statistics about database
create table load_stats_database (
    machine                  text,
    data_block               int,    -- data block size in KB
    wal_block                int,    -- WAL block size in KB
    wal_segment              int,    -- WAL segment size in MB
    scale                    int,    -- pgbench scale
    mode                     text,   -- read-only or read-write
    run                      int,    -- run (1,2,3)
    seqno                    int, -- sample number for this run
    epoch                    double precision,
    ts                       timestamptz,
    datid                    oid,
    datname                  text,
    numbackends              int,
    xact_commit              bigint,
    xact_rollback            bigint,
    blks_read                bigint,
    blks_hit                 bigint,
    tup_returned             bigint,
    tup_fetched              bigint,
    tup_inserted             bigint,
    tup_updated              bigint,
    tup_deleted              bigint,
    conflicts                bigint,
    temp_files               bigint,
    temp_bytes               bigint,
    deadlocks                bigint,
    checksum_failures        bigint,
    checksum_last_failure    bigint,
    blk_read_time            double precision,
    blk_write_time           double precision,
    session_time             double precision,
    active_time              double precision,
    idle_in_transaction_time double precision,
    sessions                 bigint,
    sessions_abandoned       bigint,
    sessions_fatal           bigint,
    sessions_killed          bigint,
    stats_reset              timestamptz
);
